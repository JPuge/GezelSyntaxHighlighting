{ 
  "name": "Gezel",
  "scopeName": "source.gezel",
  "fileTypes": ["fdl"],
  "patterns": [
    {
      "name": "meta.gezel.option",
      "match": "(\\$option)\\s+(\"\\w+\")",
      "captures": {
        "1": { "name": "support.function" },
        "2": { "name": "string.quoted.double" }
      }
    }, {
      "name": "meta.gezel.ipblock.start",
      "begin": "(ipblock)\\s+([a-zA-Z]\\w*)\\s*\\(",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "storage.type" },
        "2": { "name": "entity.name.function" }
      },
      "patterns": [
        { "include": "#inputoutput" }
      ]
    }, {
      "name": "meta.gezel.dp.start",
      "begin": "(dp)\\s+([a-zA-Z]\\w*)\\s*\\(",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "storage.type" },
        "2": { "name": "entity.name.function" }
      },
      "patterns": [
        { "include": "#inputoutput" },
        { "include": "#comment" }
      ]
    }, {
      "name": "meta.gezel.dp.headless",
      "begin": "(dp)\\s+([a-zA-Z]\\w*)\\s*{",
      "end": "}",
      "beginCaptures": {
        "1": { "name": "storage.type" },
        "2": { "name": "entity.name.function" }
      },
      "patterns": [
        { "include": "#dpBody" }
      ]
    }, {
      "name": "meta.gezel.fsm",
      "begin": "(fsm)\\s+([a-zA-Z]\\w*)\\s*\\(([a-zA-Z]\\w*)\\)\\s*{",
      "beginCaptures": {
        "1": { "name": "storage.type" },
        "2": { "name": "entity.name.function" },
        "3": { "name": "variable.parameter" }
      },
      "end": "}",
      "patterns": [
        { "include": "#fsmBody" }
      ]
    }, {
      "name": "meta.gezel.dp.body",
      "begin": "{",
      "end": "}",
      "patterns": [
        { "include": "#dpBody" }
      ]
    }, {
      "name": "meta.gezel.system",
      "begin": "(system)\\s+([a-zA-Z]\\w*)\\s*{",
      "beginCaptures": {
        "1": { "name": "storage.type" },
        "2": { "name": "entity.name.function" }
      },
      "end": "}",
      "patterns": [
        { "include": "#comment" },
        { "include": "#function" }
      ]
    }, {
      "include": "#comment" 
    }
  ],
  "uuid": "59bc7a9a-8dff-4bfa-bbc5-f6ca5161344b",
  "repository": {
    "trace": {
      "patterns": [
         {
          "name": "meta.gezel.trace",
          "match": "(\\$trace)\\((\\w+),\\s(\"[\\w/\\.:]+\")\\);",
          "captures": {
            "1": { "name": "support.function" },
            "2": { "name": "variable.other" },
            "3": { "name": "string.quoted.double" }
          }
        }
      ]
    },
    "display": {
      "patterns": [
        {
          "name": "meta.gezel.display",
          "begin": "(\\$display)\\(",
          "beginCaptures": {
            "1": { "name": "support.function" }
          },
          "end": "\\);",
          "patterns": [
            {
              "include": "#string"
            }
          ]
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.line.double-slash",
          "match": "\\/\\/.+"
        }
      ]
    }, 
    "string": {
      "patterns": [
        {
          "name": "string.quoted.double",
          "match": "\"[^\"]*\""
        }
      ]
    },
    "number": {
      "patterns": [
        {  
          "name": "meta.gezel.number",
          "match": "[^a-zA-Z_](0x|0b)*(-*\\d+)",
          "captures": {
              "1": { "name": "constant.numeric" },
              "2": { "name": "constant.numeric" }
          }
        }
      ]
    },
    "operator": {
      "patterns": [
        {
          "name": "keyword.operator",
          "match": "[(?:>>)(?:<<)\\*=&\\?\\+-]"
        }
      ]
    },
    "selector": {
      "patterns": [
        {
          "name": "meta.gezel.selector",
          "match": "(\\?)[\\s\\w]*\\w[\\s\\w]*(:)",
          "captures": {
              "1": { "name": "keyword.control" },
              "2": { "name": "keyword.control" }
          }
        }
      ]
    },
    "scriptBody": {
      "patterns": [
        { "include": "#string" },
        { "include": "#comment" },
        { "include": "#display" },
        { "include": "#number" },
        { "include": "#operator" }
      ]
    },
    "initial": {
      "patterns": [
        {
          "name": "meta.gezel.initial",
          "match": "(initial)\\s+([a-zA-Z]\\w*)\\s*;",
          "captures": {
              "1": { "name": "storage.type" },
              "2": { "name": "variable.parameter" }
          }
        }
      ]
    },
    "state": {
      "patterns": [
        {
          "name": "meta.gezel.state",
          "begin": "(state)\\s+",
          "beginCaptures": {
            "1": { "name": "storage.type" }
          },
          "end": ";",
          "patterns": [
            {
              "name": "variable.parameter",
              "match": "[a-zA-Z]\\w*"
            }
          ]
        }
      ]
    },
    "stateCmd": {
      "patterns": [
        {
          "name": "meta.gezel.stateCmd",
          "match": "(@)[a-zA-Z]\\w*\\s*\\([a-zA-Z]\\w*\\)\\s*(->)\\s*[a-zA-Z]\\w*;",
          "captures": {
            "1": { "name": "keyword.operator" },
            "2": { "name": "keyword.operator" }
          }
        }
      ]
    },
    "fsmBody": {
      "patterns": [
        { "include": "#initial" },
        { "include": "#state" },
        { "include": "#stateCmd" }
      ]
    },
    "function": {
      "patterns": [
        {
          "name": "meta.gezel.function",
          "begin": "([a-zA-Z]\\w*)\\s*\\(",
          "beginCaptures": {
            "1": { "name": "entity.name.function" }
          },
          "end": "\\);",
          "patterns": [
            { "include": "#comment" },
            {
              "name": "variable.parameter",
              "match": "[a-zA-Z]\\w*"
            }
          ]
        }
      ]
    },
    "dpBody": {
      "patterns": [
        {
          "include": "#trace"
        }, {
          "include": "#comment" 
        }, {
          "name": "meta.gezel.always",
          "begin": "(always)\\s*{",
          "beginCaptures": {
            "1": { "name": "storage.type" }
          },
          "end": "}",
          "patterns": [
            {
              "include": "#scriptBody"
            }
          ]
        }, {
          "name": "meta.gezel.reg",
          "match": "(reg)\\s+([a-zA-Z]\\w*)\\s+:\\s*(ns|tc)\\((\\d*)\\);",
          "captures": {
            "1": { "name": "keyword.parameter" },
            "2": { "name": "variable.other" },
            "3": { "name": "keyword.operator" },
            "4": { "name": "constant.numeric" }
          }
        }, {
          "name": "meta.gezel.sfg",
          "begin": "(sfg)\\s+([a-zA-Z]\\w*)\\s*{",
          "beginCaptures": {
            "1": { "name": "storage.type" },
            "2": { "name": "entity.name.function" }
          },
          "end": "}",
          "patterns": [
            { "include": "#scriptBody" }
          ]
        }, {
          "name": "meta.gezel.signal",
          "match": "(sig)\\s+([a-zA-Z]\\w*)\\s*:\\s*(ns|tc)\\((\\d*)\\);",
          "captures": {
            "1": { "name": "keyword.parameter" },
            "2": { "name": "variable.other" },
            "3": { "name": "keyword.operator" },
            "4": { "name": "constant.numeric" }
          }
        }, {
          "name": "meta.gezel.function.call",
          "begin": "(use)\\s+([a-zA-Z]\\w*)\\s*\\(",
          "beginCaptures": {
            "1": { "name": "support.function" },
            "2": { "name": "entity.name.function" }
          },
          "end": "\\);",
          "patterns": [
            { "include": "#comment"},
            {
              "name": "variable.parameter",
              "match": "[a-zA-Z]\\w*"
            },
            { "include": "#number" }
          ]
        }, {
          "name": "meta.gezel.iptype",
          "match": "(iptype)\\s+(\"\\w+\");",
          "captures": {
            "1": { "name": "keyword.parameter" },
            "2": { "name": "string.quoted.double" }
          }
        }, {
          "name": "meta.gezel.ipparam",
          "match": "(ipparm)\\s+(\"[\\w\\\\:=\\./]+\");",
          "captures": {
            "1": { "name": "keyword.parameter" },
            "2": { "name": "string.quoted.double" }
          }
        }
      ]
    },
    "inputoutput": {
      "patterns": [
        {
          "name": "meta.gezel.inputoutput",
          "match": "\\s*(in|out)\\s+([a-zA-Z]\\w*)\\s*:\\s*(ns|tc)\\((\\d*)\\);?",
          "captures": {
            "1": { "name": "keyword.parameter" },
            "2": { "name": "variable.other" },
            "3": { "name": "keyword.operator" },
            "4": { "name": "constant.numeric" }
          }
        }
      ]
    }
  }
}